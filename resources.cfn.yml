---
AWSTemplateFormatVersion: "2010-09-09"
Description: jwtAuthorizr Template
Resources:

  AuthorizrRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "lambdaAuthorizr"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  AuthorizrLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: "dasniko"
        S3Key: "lambda/jwtAuthorizr.zip"
      FunctionName: "jwtAuthorizr"
      Description: "Custom Authorizer Lambda function for API Gateway with Bearer JWT"
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt AuthorizrRole.Arn
      Runtime: "nodejs4.3"
      Timeout: 2

  AuthorizrRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "DemoApi"
      Description: "Created by jwtAuthorizer Template"

  AuthorizrAuthorizer:
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      Name: "jwtAuthorizr"
      Type: "TOKEN"
      AuthorizerUri:
        Fn::Join:
          - ""
          -
            - "arn:aws:apigateway:"
            - Ref: "AWS::Region"
            - ":lambda:path/2015-03-31/functions/"
            - !GetAtt AuthorizrLambda.Arn
            - "/invocations"
      IdentitySource: "method.request.header.Authorization"
      IdentityValidationExpression: "^Bearer [a-zA-Z0-9_.-]+$"
      AuthorizerResultTtlInSeconds: "10"
      RestApiId: !Ref "AuthorizrRestApi"

  ApiMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: "CUSTOM"
      AuthorizerId: !Ref "AuthorizrAuthorizer"
      HttpMethod: "GET"
      ResourceId: !GetAtt "AuthorizrRestApi.RootResourceId"
      RestApiId: !Ref "AuthorizrRestApi"
      Integration:
        Type: "MOCK"

  ApiDeployment:
    DependsOn: "ApiMethod"
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref "AuthorizrRestApi"
      StageName: "demo"
